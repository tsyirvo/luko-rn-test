8c16ad1b760206781b9edab4858ca046
'use strict';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _Pressability = _interopRequireDefault(require("../../Pressability/Pressability"));

var _PressabilityDebug = require("../../Pressability/PressabilityDebug");

var _TVTouchable = _interopRequireDefault(require("./TVTouchable"));

var _Platform = _interopRequireDefault(require("../../Utilities/Platform"));

var _View = _interopRequireDefault(require("../../Components/View/View"));

var React = _interopRequireWildcard(require("react"));

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var PASSTHROUGH_PROPS = ['accessibilityActions', 'accessibilityElementsHidden', 'accessibilityHint', 'accessibilityIgnoresInvertColors', 'accessibilityLabel', 'accessibilityLiveRegion', 'accessibilityRole', 'accessibilityState', 'accessibilityValue', 'accessibilityViewIsModal', 'hitSlop', 'importantForAccessibility', 'nativeID', 'onAccessibilityAction', 'onBlur', 'onFocus', 'onLayout', 'testID'];

var TouchableWithoutFeedback = function (_React$Component) {
  (0, _inherits2.default)(TouchableWithoutFeedback, _React$Component);

  var _super = _createSuper(TouchableWithoutFeedback);

  function TouchableWithoutFeedback() {
    var _this;

    (0, _classCallCheck2.default)(this, TouchableWithoutFeedback);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      pressability: new _Pressability.default(createPressabilityConfig(_this.props))
    };
    return _this;
  }

  (0, _createClass2.default)(TouchableWithoutFeedback, [{
    key: "render",
    value: function render() {
      var element = React.Children.only(this.props.children);
      var children = [element.props.children];

      if (__DEV__) {
        if (element.type === _View.default) {
          children.push(React.createElement(_PressabilityDebug.PressabilityDebugView, {
            color: "red",
            hitSlop: this.props.hitSlop
          }));
        }
      }

      var _this$state$pressabil = this.state.pressability.getEventHandlers(),
          onBlur = _this$state$pressabil.onBlur,
          onFocus = _this$state$pressabil.onFocus,
          eventHandlersWithoutBlurAndFocus = (0, _objectWithoutProperties2.default)(_this$state$pressabil, ["onBlur", "onFocus"]);

      var elementProps = _objectSpread(_objectSpread({}, eventHandlersWithoutBlurAndFocus), {}, {
        accessible: this.props.accessible !== false,
        focusable: this.props.focusable !== false && this.props.onPress !== undefined
      });

      for (var _iterator = _createForOfIteratorHelperLoose(PASSTHROUGH_PROPS), _step; !(_step = _iterator()).done;) {
        var prop = _step.value;

        if (this.props[prop] !== undefined) {
          elementProps[prop] = this.props[prop];
        }
      }

      return React.cloneElement.apply(React, [element, elementProps].concat(children));
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      if (_Platform.default.isTV) {
        this._tvTouchable = new _TVTouchable.default(this, {
          getDisabled: function getDisabled() {
            return _this2.props.disabled === true;
          },
          onBlur: function onBlur(event) {
            if (_this2.props.onBlur != null) {
              _this2.props.onBlur(event);
            }
          },
          onFocus: function onFocus(event) {
            if (_this2.props.onFocus != null) {
              _this2.props.onFocus(event);
            }
          },
          onPress: function onPress(event) {
            if (_this2.props.onPress != null) {
              _this2.props.onPress(event);
            }
          }
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.state.pressability.configure(createPressabilityConfig(this.props));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (_Platform.default.isTV) {
        if (this._tvTouchable != null) {
          this._tvTouchable.destroy();
        }
      }

      this.state.pressability.reset();
    }
  }]);
  return TouchableWithoutFeedback;
}(React.Component);

function createPressabilityConfig(props) {
  return {
    cancelable: !props.rejectResponderTermination,
    disabled: props.disabled,
    hitSlop: props.hitSlop,
    delayLongPress: props.delayLongPress,
    delayPressIn: props.delayPressIn,
    delayPressOut: props.delayPressOut,
    minPressDuration: 0,
    pressRectOffset: props.pressRetentionOffset,
    android_disableSound: props.touchSoundDisabled,
    onBlur: props.onBlur,
    onFocus: props.onFocus,
    onLongPress: props.onLongPress,
    onPress: props.onPress,
    onPressIn: props.onPressIn,
    onPressOut: props.onPressOut
  };
}

module.exports = TouchableWithoutFeedback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,