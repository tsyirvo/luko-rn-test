acfb57522c600beb6092a08de8a56f4c
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var NativeAnimatedHelper = require("../NativeAnimatedHelper");

var Animation = function () {
  function Animation() {
    (0, _classCallCheck2.default)(this, Animation);
  }

  (0, _createClass2.default)(Animation, [{
    key: "start",
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}
  }, {
    key: "stop",
    value: function stop() {
      if (this.__nativeId) {
        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);
      }
    }
  }, {
    key: "__getNativeAnimationConfig",
    value: function __getNativeAnimationConfig() {
      throw new Error('This animation type cannot be offloaded to native');
    }
  }, {
    key: "__debouncedOnEnd",
    value: function __debouncedOnEnd(result) {
      var onEnd = this.__onEnd;
      this.__onEnd = null;
      onEnd && onEnd(result);
    }
  }, {
    key: "__startNativeAnimation",
    value: function __startNativeAnimation(animatedValue) {
      NativeAnimatedHelper.API.enableQueue();

      animatedValue.__makeNative();

      NativeAnimatedHelper.API.disableQueue();
      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();
      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));
    }
  }]);
  return Animation;
}();

module.exports = Animation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGlvbi5qcyJdLCJuYW1lcyI6WyJOYXRpdmVBbmltYXRlZEhlbHBlciIsInJlcXVpcmUiLCJBbmltYXRpb24iLCJmcm9tVmFsdWUiLCJvblVwZGF0ZSIsIm9uRW5kIiwicHJldmlvdXNBbmltYXRpb24iLCJhbmltYXRlZFZhbHVlIiwiX19uYXRpdmVJZCIsIkFQSSIsInN0b3BBbmltYXRpb24iLCJFcnJvciIsInJlc3VsdCIsIl9fb25FbmQiLCJlbmFibGVRdWV1ZSIsIl9fbWFrZU5hdGl2ZSIsImRpc2FibGVRdWV1ZSIsImdlbmVyYXRlTmV3QW5pbWF0aW9uSWQiLCJzdGFydEFuaW1hdGluZ05vZGUiLCJfX2dldE5hdGl2ZVRhZyIsIl9fZ2V0TmF0aXZlQW5pbWF0aW9uQ29uZmlnIiwiX19kZWJvdW5jZWRPbkVuZCIsImJpbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7QUFFQSxJQUFNQSxvQkFBb0IsR0FBR0MsT0FBTywyQkFBcEM7O0lBaUJNQyxTOzs7Ozs7OzBCQU9GQyxTLEVBQ0FDLFEsRUFDQUMsSyxFQUNBQyxpQixFQUNBQyxhLEVBQ00sQ0FBRTs7OzJCQUNHO0FBQ1gsVUFBSSxLQUFLQyxVQUFULEVBQXFCO0FBQ25CUixRQUFBQSxvQkFBb0IsQ0FBQ1MsR0FBckIsQ0FBeUJDLGFBQXpCLENBQXVDLEtBQUtGLFVBQTVDO0FBQ0Q7QUFDRjs7O2lEQUNpQztBQUdoQyxZQUFNLElBQUlHLEtBQUosQ0FBVSxtREFBVixDQUFOO0FBQ0Q7OztxQ0FFZ0JDLE0sRUFBeUI7QUFDeEMsVUFBTVAsS0FBSyxHQUFHLEtBQUtRLE9BQW5CO0FBQ0EsV0FBS0EsT0FBTCxHQUFlLElBQWY7QUFDQVIsTUFBQUEsS0FBSyxJQUFJQSxLQUFLLENBQUNPLE1BQUQsQ0FBZDtBQUNEOzs7MkNBQ3NCTCxhLEVBQW9DO0FBQ3pEUCxNQUFBQSxvQkFBb0IsQ0FBQ1MsR0FBckIsQ0FBeUJLLFdBQXpCOztBQUNBUCxNQUFBQSxhQUFhLENBQUNRLFlBQWQ7O0FBQ0FmLE1BQUFBLG9CQUFvQixDQUFDUyxHQUFyQixDQUF5Qk8sWUFBekI7QUFDQSxXQUFLUixVQUFMLEdBQWtCUixvQkFBb0IsQ0FBQ2lCLHNCQUFyQixFQUFsQjtBQUNBakIsTUFBQUEsb0JBQW9CLENBQUNTLEdBQXJCLENBQXlCUyxrQkFBekIsQ0FDRSxLQUFLVixVQURQLEVBRUVELGFBQWEsQ0FBQ1ksY0FBZCxFQUZGLEVBR0UsS0FBS0MsMEJBQUwsRUFIRixFQUlFLEtBQUtDLGdCQUFMLENBQXNCQyxJQUF0QixDQUEyQixJQUEzQixDQUpGO0FBTUQ7Ozs7O0FBR0hDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRCLFNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgTmF0aXZlQW5pbWF0ZWRIZWxwZXIgPSByZXF1aXJlKCcuLi9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5pbXBvcnQgdHlwZSBBbmltYXRlZFZhbHVlIGZyb20gJy4uL25vZGVzL0FuaW1hdGVkVmFsdWUnO1xuXG5leHBvcnQgdHlwZSBFbmRSZXN1bHQgPSB7ZmluaXNoZWQ6IGJvb2xlYW4sIC4uLn07XG5leHBvcnQgdHlwZSBFbmRDYWxsYmFjayA9IChyZXN1bHQ6IEVuZFJlc3VsdCkgPT4gdm9pZDtcblxuZXhwb3J0IHR5cGUgQW5pbWF0aW9uQ29uZmlnID0ge1xuICBpc0ludGVyYWN0aW9uPzogYm9vbGVhbixcbiAgdXNlTmF0aXZlRHJpdmVyOiBib29sZWFuLFxuICBvbkNvbXBsZXRlPzogP0VuZENhbGxiYWNrLFxuICBpdGVyYXRpb25zPzogbnVtYmVyLFxufTtcblxuLy8gSW1wb3J0YW50IG5vdGU6IHN0YXJ0KCkgYW5kIHN0b3AoKSB3aWxsIG9ubHkgYmUgY2FsbGVkIGF0IG1vc3Qgb25jZS5cbi8vIE9uY2UgYW4gYW5pbWF0aW9uIGhhcyBiZWVuIHN0b3BwZWQgb3IgZmluaXNoZWQgaXRzIGNvdXJzZSwgaXQgd2lsbFxuLy8gbm90IGJlIHJldXNlZC5cbmNsYXNzIEFuaW1hdGlvbiB7XG4gIF9fYWN0aXZlOiBib29sZWFuO1xuICBfX2lzSW50ZXJhY3Rpb246IGJvb2xlYW47XG4gIF9fbmF0aXZlSWQ6IG51bWJlcjtcbiAgX19vbkVuZDogP0VuZENhbGxiYWNrO1xuICBfX2l0ZXJhdGlvbnM6IG51bWJlcjtcbiAgc3RhcnQoXG4gICAgZnJvbVZhbHVlOiBudW1iZXIsXG4gICAgb25VcGRhdGU6ICh2YWx1ZTogbnVtYmVyKSA9PiB2b2lkLFxuICAgIG9uRW5kOiA/RW5kQ2FsbGJhY2ssXG4gICAgcHJldmlvdXNBbmltYXRpb246ID9BbmltYXRpb24sXG4gICAgYW5pbWF0ZWRWYWx1ZTogQW5pbWF0ZWRWYWx1ZSxcbiAgKTogdm9pZCB7fVxuICBzdG9wKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLl9fbmF0aXZlSWQpIHtcbiAgICAgIE5hdGl2ZUFuaW1hdGVkSGVscGVyLkFQSS5zdG9wQW5pbWF0aW9uKHRoaXMuX19uYXRpdmVJZCk7XG4gICAgfVxuICB9XG4gIF9fZ2V0TmF0aXZlQW5pbWF0aW9uQ29uZmlnKCk6IGFueSB7XG4gICAgLy8gU3ViY2xhc3NlcyB0aGF0IGhhdmUgY29ycmVzcG9uZGluZyBhbmltYXRpb24gaW1wbGVtZW50YXRpb24gZG9uZSBpbiBuYXRpdmVcbiAgICAvLyBzaG91bGQgb3ZlcnJpZGUgdGhpcyBtZXRob2RcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgYW5pbWF0aW9uIHR5cGUgY2Fubm90IGJlIG9mZmxvYWRlZCB0byBuYXRpdmUnKTtcbiAgfVxuICAvLyBIZWxwZXIgZnVuY3Rpb24gZm9yIHN1YmNsYXNzZXMgdG8gbWFrZSBzdXJlIG9uRW5kIGlzIG9ubHkgY2FsbGVkIG9uY2UuXG4gIF9fZGVib3VuY2VkT25FbmQocmVzdWx0OiBFbmRSZXN1bHQpOiB2b2lkIHtcbiAgICBjb25zdCBvbkVuZCA9IHRoaXMuX19vbkVuZDtcbiAgICB0aGlzLl9fb25FbmQgPSBudWxsO1xuICAgIG9uRW5kICYmIG9uRW5kKHJlc3VsdCk7XG4gIH1cbiAgX19zdGFydE5hdGl2ZUFuaW1hdGlvbihhbmltYXRlZFZhbHVlOiBBbmltYXRlZFZhbHVlKTogdm9pZCB7XG4gICAgTmF0aXZlQW5pbWF0ZWRIZWxwZXIuQVBJLmVuYWJsZVF1ZXVlKCk7XG4gICAgYW5pbWF0ZWRWYWx1ZS5fX21ha2VOYXRpdmUoKTtcbiAgICBOYXRpdmVBbmltYXRlZEhlbHBlci5BUEkuZGlzYWJsZVF1ZXVlKCk7XG4gICAgdGhpcy5fX25hdGl2ZUlkID0gTmF0aXZlQW5pbWF0ZWRIZWxwZXIuZ2VuZXJhdGVOZXdBbmltYXRpb25JZCgpO1xuICAgIE5hdGl2ZUFuaW1hdGVkSGVscGVyLkFQSS5zdGFydEFuaW1hdGluZ05vZGUoXG4gICAgICB0aGlzLl9fbmF0aXZlSWQsXG4gICAgICBhbmltYXRlZFZhbHVlLl9fZ2V0TmF0aXZlVGFnKCksXG4gICAgICB0aGlzLl9fZ2V0TmF0aXZlQW5pbWF0aW9uQ29uZmlnKCksXG4gICAgICB0aGlzLl9fZGVib3VuY2VkT25FbmQuYmluZCh0aGlzKSxcbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQW5pbWF0aW9uO1xuIl19