6ac3807777a3ed205e05c16a8a19365c
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createIconButtonComponent;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _lodash = _interopRequireDefault(require("lodash.isstring"));

var _lodash2 = _interopRequireDefault(require("lodash.omit"));

var _lodash3 = _interopRequireDefault(require("lodash.pick"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("./react-native");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: 8
  },
  touchable: {
    overflow: 'hidden'
  },
  icon: {
    marginRight: 10
  },
  text: {
    fontWeight: '600',
    backgroundColor: 'transparent'
  }
});

var IOS7_BLUE = '#007AFF';
var TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];
var TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];

function createIconButtonComponent(Icon) {
  var _class, _temp;

  return _temp = _class = function (_PureComponent) {
    (0, _inherits2.default)(IconButton, _PureComponent);

    var _super = _createSuper(IconButton);

    function IconButton() {
      (0, _classCallCheck2.default)(this, IconButton);
      return _super.apply(this, arguments);
    }

    (0, _createClass2.default)(IconButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            iconStyle = _this$props.iconStyle,
            children = _this$props.children,
            restProps = (0, _objectWithoutProperties2.default)(_this$props, ["style", "iconStyle", "children"]);
        var iconProps = (0, _lodash3.default)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');
        var touchableProps = (0, _lodash3.default)(restProps, TOUCHABLE_PROP_NAMES);
        var props = (0, _lodash2.default)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
        var colorStyle = (0, _lodash3.default)(this.props, 'color');
        var blockStyle = (0, _lodash3.default)(this.props, 'backgroundColor', 'borderRadius');
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [styles.touchable, blockStyle]
        }, touchableProps), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, blockStyle, style]
        }, props), _react.default.createElement(Icon, iconProps), (0, _lodash.default)(children) ? _react.default.createElement(_reactNative.Text, {
          style: [styles.text, colorStyle]
        }, children) : children));
      }
    }]);
    return IconButton;
  }(_react.PureComponent), _class.defaultProps = {
    backgroundColor: IOS7_BLUE,
    borderRadius: 5,
    color: 'white',
    size: 20
  }, _temp;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImljb24tYnV0dG9uLmpzIl0sIm5hbWVzIjpbInN0eWxlcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJjb250YWluZXIiLCJmbGV4RGlyZWN0aW9uIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwicGFkZGluZyIsInRvdWNoYWJsZSIsIm92ZXJmbG93IiwiaWNvbiIsIm1hcmdpblJpZ2h0IiwidGV4dCIsImZvbnRXZWlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJJT1M3X0JMVUUiLCJURVhUX1BST1BfTkFNRVMiLCJUT1VDSEFCTEVfUFJPUF9OQU1FUyIsImNyZWF0ZUljb25CdXR0b25Db21wb25lbnQiLCJJY29uIiwicHJvcHMiLCJzdHlsZSIsImljb25TdHlsZSIsImNoaWxkcmVuIiwicmVzdFByb3BzIiwiaWNvblByb3BzIiwidG91Y2hhYmxlUHJvcHMiLCJPYmplY3QiLCJrZXlzIiwiY29sb3JTdHlsZSIsImJsb2NrU3R5bGUiLCJQdXJlQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwiYm9yZGVyUmFkaXVzIiwiY29sb3IiLCJzaXplIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLHdCQUFXQyxNQUFYLENBQWtCO0FBQy9CQyxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsYUFBYSxFQUFFLEtBRE47QUFFVEMsSUFBQUEsY0FBYyxFQUFFLFlBRlA7QUFHVEMsSUFBQUEsVUFBVSxFQUFFLFFBSEg7QUFJVEMsSUFBQUEsT0FBTyxFQUFFO0FBSkEsR0FEb0I7QUFPL0JDLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxRQUFRLEVBQUU7QUFERCxHQVBvQjtBQVUvQkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLFdBQVcsRUFBRTtBQURULEdBVnlCO0FBYS9CQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsVUFB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QUFlLEVBQUVDLFNBREc7QUFFcEJrQixJQUFBQSxZQUFZLEVBQUUsQ0FGTTtBQUdwQkMsSUFBQUEsS0FBSyxFQUFFLE9BSGE7QUFJcEJDLElBQUFBLElBQUksRUFBRTtBQUpjLEdBRHhCO0FBa0REIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzU3RyaW5nIGZyb20gJ2xvZGFzaC5pc3N0cmluZyc7XG5pbXBvcnQgb21pdCBmcm9tICdsb2Rhc2gub21pdCc7XG5pbXBvcnQgcGljayBmcm9tICdsb2Rhc2gucGljayc7XG5pbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFRleHQsIFRvdWNoYWJsZUhpZ2hsaWdodCwgVmlldyB9IGZyb20gJy4vcmVhY3QtbmF0aXZlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIHBhZGRpbmc6IDgsXG4gIH0sXG4gIHRvdWNoYWJsZToge1xuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbiAgaWNvbjoge1xuICAgIG1hcmdpblJpZ2h0OiAxMCxcbiAgfSxcbiAgdGV4dDoge1xuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgfSxcbn0pO1xuXG5jb25zdCBJT1M3X0JMVUUgPSAnIzAwN0FGRic7XG5cbmNvbnN0IFRFWFRfUFJPUF9OQU1FUyA9IFtcbiAgJ2VsbGlwc2l6ZU1vZGUnLFxuICAnbnVtYmVyT2ZMaW5lcycsXG4gICd0ZXh0QnJlYWtTdHJhdGVneScsXG4gICdzZWxlY3RhYmxlJyxcbiAgJ3N1cHByZXNzSGlnaGxpZ2h0aW5nJyxcbiAgJ2FsbG93Rm9udFNjYWxpbmcnLFxuICAnYWRqdXN0c0ZvbnRTaXplVG9GaXQnLFxuICAnbWluaW11bUZvbnRTY2FsZScsXG5dO1xuXG5jb25zdCBUT1VDSEFCTEVfUFJPUF9OQU1FUyA9IFtcbiAgJ2FjY2Vzc2libGUnLFxuICAnYWNjZXNzaWJpbGl0eUxhYmVsJyxcbiAgJ2FjY2Vzc2liaWxpdHlIaW50JyxcbiAgJ2FjY2Vzc2liaWxpdHlDb21wb25lbnRUeXBlJyxcbiAgJ2FjY2Vzc2liaWxpdHlSb2xlJyxcbiAgJ2FjY2Vzc2liaWxpdHlTdGF0ZXMnLFxuICAnYWNjZXNzaWJpbGl0eVRyYWl0cycsXG4gICdvbkZvY3VzJyxcbiAgJ29uQmx1cicsXG4gICdkaXNhYmxlZCcsXG4gICdvblByZXNzJyxcbiAgJ29uUHJlc3NJbicsXG4gICdvblByZXNzT3V0JyxcbiAgJ29uTGF5b3V0JyxcbiAgJ29uTG9uZ1ByZXNzJyxcbiAgJ25hdGl2ZUlEJyxcbiAgJ3Rlc3RJRCcsXG4gICdkZWxheVByZXNzSW4nLFxuICAnZGVsYXlQcmVzc091dCcsXG4gICdkZWxheUxvbmdQcmVzcycsXG4gICdhY3RpdmVPcGFjaXR5JyxcbiAgJ3VuZGVybGF5Q29sb3InLFxuICAnc2VsZWN0aW9uQ29sb3InLFxuICAnb25TaG93VW5kZXJsYXknLFxuICAnb25IaWRlVW5kZXJsYXknLFxuICAnaGFzVFZQcmVmZXJyZWRGb2N1cycsXG4gICd0dlBhcmFsbGF4UHJvcGVydGllcycsXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVJY29uQnV0dG9uQ29tcG9uZW50KEljb24pIHtcbiAgcmV0dXJuIGNsYXNzIEljb25CdXR0b24gZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBJT1M3X0JMVUUsXG4gICAgICBib3JkZXJSYWRpdXM6IDUsXG4gICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgIHNpemU6IDIwLFxuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7IHN0eWxlLCBpY29uU3R5bGUsIGNoaWxkcmVuLCAuLi5yZXN0UHJvcHMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGNvbnN0IGljb25Qcm9wcyA9IHBpY2soXG4gICAgICAgIHJlc3RQcm9wcyxcbiAgICAgICAgVEVYVF9QUk9QX05BTUVTLFxuICAgICAgICAnc3R5bGUnLFxuICAgICAgICAnbmFtZScsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgJ2NvbG9yJ1xuICAgICAgKTtcbiAgICAgIGNvbnN0IHRvdWNoYWJsZVByb3BzID0gcGljayhyZXN0UHJvcHMsIFRPVUNIQUJMRV9QUk9QX05BTUVTKTtcbiAgICAgIGNvbnN0IHByb3BzID0gb21pdChcbiAgICAgICAgcmVzdFByb3BzLFxuICAgICAgICBPYmplY3Qua2V5cyhpY29uUHJvcHMpLFxuICAgICAgICBPYmplY3Qua2V5cyh0b3VjaGFibGVQcm9wcyksXG4gICAgICAgICdpY29uU3R5bGUnLFxuICAgICAgICAnYm9yZGVyUmFkaXVzJyxcbiAgICAgICAgJ2JhY2tncm91bmRDb2xvcidcbiAgICAgICk7XG4gICAgICBpY29uUHJvcHMuc3R5bGUgPSBpY29uU3R5bGUgPyBbc3R5bGVzLmljb24sIGljb25TdHlsZV0gOiBzdHlsZXMuaWNvbjtcblxuICAgICAgY29uc3QgY29sb3JTdHlsZSA9IHBpY2sodGhpcy5wcm9wcywgJ2NvbG9yJyk7XG4gICAgICBjb25zdCBibG9ja1N0eWxlID0gcGljayh0aGlzLnByb3BzLCAnYmFja2dyb3VuZENvbG9yJywgJ2JvcmRlclJhZGl1cycpO1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8VG91Y2hhYmxlSGlnaGxpZ2h0XG4gICAgICAgICAgc3R5bGU9e1tzdHlsZXMudG91Y2hhYmxlLCBibG9ja1N0eWxlXX1cbiAgICAgICAgICB7Li4udG91Y2hhYmxlUHJvcHN9XG4gICAgICAgID5cbiAgICAgICAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIGJsb2NrU3R5bGUsIHN0eWxlXX0gey4uLnByb3BzfT5cbiAgICAgICAgICAgIDxJY29uIHsuLi5pY29uUHJvcHN9IC8+XG4gICAgICAgICAgICB7aXNTdHJpbmcoY2hpbGRyZW4pID8gKFxuICAgICAgICAgICAgICA8VGV4dCBzdHlsZT17W3N0eWxlcy50ZXh0LCBjb2xvclN0eWxlXX0+e2NoaWxkcmVufTwvVGV4dD5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIGNoaWxkcmVuXG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgPC9Ub3VjaGFibGVIaWdobGlnaHQ+XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdfQ==