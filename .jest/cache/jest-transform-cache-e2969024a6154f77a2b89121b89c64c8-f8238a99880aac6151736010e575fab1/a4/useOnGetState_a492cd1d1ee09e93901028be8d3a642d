77a202d64db256d913cf020b3443bc4e
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useOnGetState;

var React = _interopRequireWildcard(require("react"));

var _NavigationBuilderContext = _interopRequireDefault(require("./NavigationBuilderContext"));

var _NavigationRouteContext = _interopRequireDefault(require("./NavigationRouteContext"));

var _isArrayEqual = _interopRequireDefault(require("./isArrayEqual"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useOnGetState(_ref) {
  var getState = _ref.getState,
      getStateListeners = _ref.getStateListeners;

  var _React$useContext = React.useContext(_NavigationBuilderContext.default),
      addKeyedListener = _React$useContext.addKeyedListener;

  var route = React.useContext(_NavigationRouteContext.default);
  var key = route ? route.key : 'root';
  var getRehydratedState = React.useCallback(function () {
    var state = getState();
    var routes = state.routes.map(function (route) {
      var _getStateListeners$ro;

      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);

      if (route.state === childState) {
        return route;
      }

      return _objectSpread(_objectSpread({}, route), {}, {
        state: childState
      });
    });

    if ((0, _isArrayEqual.default)(state.routes, routes)) {
      return state;
    }

    return _objectSpread(_objectSpread({}, state), {}, {
      routes: routes
    });
  }, [getState, getStateListeners]);
  React.useEffect(function () {
    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);
  }, [addKeyedListener, getRehydratedState, key]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZU9uR2V0U3RhdGUudHN4Il0sIm5hbWVzIjpbImdldFN0YXRlTGlzdGVuZXJzIiwiYWRkS2V5ZWRMaXN0ZW5lciIsIlJlYWN0IiwiTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0Iiwicm91dGUiLCJOYXZpZ2F0aW9uUm91dGVDb250ZXh0Iiwia2V5IiwiZ2V0UmVoeWRyYXRlZFN0YXRlIiwic3RhdGUiLCJnZXRTdGF0ZSIsInJvdXRlcyIsImNoaWxkU3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEseUJBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsOEJBQUEsQ0FBQTs7QUFHQSxJQUFBLHVCQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLDRCQUFBLENBQUE7O0FBQ0EsSUFBQSxhQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLGtCQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9lLFNBQUEsYUFBQSxPQUdIO0FBQUEsTUFIMEIsUUFHMUIsUUFIMEIsUUFHMUI7QUFBQSxNQURWQSxpQkFDVSxRQURWQSxpQkFDVTs7QUFBQSwwQkFDbUJFLEtBQUssQ0FBTEEsVUFBQUEsQ0FBaUJDLHlCQUFBQSxDQUE5QyxPQUE2QkQsQ0FEbkI7QUFBQSxNQUNGRCxnQkFERSxxQkFDRkEsZ0JBREU7O0FBRVYsTUFBTUcsS0FBSyxHQUFHRixLQUFLLENBQUxBLFVBQUFBLENBQWlCRyx1QkFBQUEsQ0FBL0IsT0FBY0gsQ0FBZDtBQUNBLE1BQU1JLEdBQUcsR0FBR0YsS0FBSyxHQUFHQSxLQUFLLENBQVIsR0FBQSxHQUFqQixNQUFBO0FBRUEsTUFBTUcsa0JBQWtCLEdBQUcsS0FBSyxDQUFMLFdBQUEsQ0FBa0IsWUFBTTtBQUNqRCxRQUFNQyxLQUFLLEdBQUdDLFFBRG1DLEVBQ2pEO0FBR0EsUUFBTUMsTUFBTSxHQUFHLEtBQUssQ0FBTCxNQUFBLENBQUEsR0FBQSxDQUFrQk4sVUFBQUEsS0FBRCxFQUFXO0FBQUEsVUFBQSxxQkFBQTs7QUFDekMsVUFBTU8sVUFBVSxHQUFBLENBQUEscUJBQUEsR0FBR1gsaUJBQWlCLENBQUNJLEtBQUssQ0FBMUIsR0FBb0IsQ0FBcEIsTUFBQSxJQUFBLElBQUEscUJBQUEsS0FBQSxLQUFBLENBQUEsR0FBQSxLQUFBLENBQUEsR0FBR0oscUJBQUFBLENBQUFBLElBQUFBLENBQW5CLGlCQUFtQkEsQ0FBbkI7O0FBRUEsVUFBSUksS0FBSyxDQUFMQSxLQUFBQSxLQUFKLFVBQUEsRUFBZ0M7QUFDOUIsZUFBQSxLQUFBO0FBQ0Q7O0FBRUQsNkNBQU8sS0FBUDtBQUFtQkksUUFBQUEsS0FBSyxFQUFFRztBQUExQjtBQVBGLEtBQWUsQ0FBZjs7QUFVQSxRQUFJLENBQUEsR0FBQSxhQUFBLENBQUEsT0FBQSxFQUFhSCxLQUFLLENBQWxCLE1BQUEsRUFBSixNQUFJLENBQUosRUFBd0M7QUFDdEMsYUFBQSxLQUFBO0FBQ0Q7O0FBRUQsMkNBQU8sS0FBUDtBQUFtQkUsTUFBQUEsTUFBQUEsRUFBQUE7QUFBbkI7QUFsQnlCLEdBQUEsRUFtQnhCLENBQUEsUUFBQSxFQW5CSCxpQkFtQkcsQ0FuQndCLENBQTNCO0FBcUJBUixFQUFBQSxLQUFLLENBQUxBLFNBQUFBLENBQWdCLFlBQU07QUFDcEIsV0FBT0QsZ0JBQVAsS0FBQSxJQUFPQSxJQUFBQSxnQkFBUCxLQUFBLEtBQUEsQ0FBT0EsR0FBUCxLQUFBLENBQU9BLEdBQUFBLGdCQUFnQixDQUFBLFVBQUEsRUFBQSxHQUFBLEVBQXZCLGtCQUF1QixDQUF2QjtBQURGQyxHQUFBQSxFQUVHLENBQUEsZ0JBQUEsRUFBQSxrQkFBQSxFQUZIQSxHQUVHLENBRkhBO0FBR0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IE5hdmlnYXRpb25TdGF0ZSB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL3JvdXRlcnMnO1xuaW1wb3J0IE5hdmlnYXRpb25CdWlsZGVyQ29udGV4dCwge1xuICBHZXRTdGF0ZUxpc3RlbmVyLFxufSBmcm9tICcuL05hdmlnYXRpb25CdWlsZGVyQ29udGV4dCc7XG5pbXBvcnQgTmF2aWdhdGlvblJvdXRlQ29udGV4dCBmcm9tICcuL05hdmlnYXRpb25Sb3V0ZUNvbnRleHQnO1xuaW1wb3J0IGlzQXJyYXlFcXVhbCBmcm9tICcuL2lzQXJyYXlFcXVhbCc7XG5cbnR5cGUgT3B0aW9ucyA9IHtcbiAgZ2V0U3RhdGU6ICgpID0+IE5hdmlnYXRpb25TdGF0ZTtcbiAgZ2V0U3RhdGVMaXN0ZW5lcnM6IFJlY29yZDxzdHJpbmcsIEdldFN0YXRlTGlzdGVuZXIgfCB1bmRlZmluZWQ+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlT25HZXRTdGF0ZSh7XG4gIGdldFN0YXRlLFxuICBnZXRTdGF0ZUxpc3RlbmVycyxcbn06IE9wdGlvbnMpIHtcbiAgY29uc3QgeyBhZGRLZXllZExpc3RlbmVyIH0gPSBSZWFjdC51c2VDb250ZXh0KE5hdmlnYXRpb25CdWlsZGVyQ29udGV4dCk7XG4gIGNvbnN0IHJvdXRlID0gUmVhY3QudXNlQ29udGV4dChOYXZpZ2F0aW9uUm91dGVDb250ZXh0KTtcbiAgY29uc3Qga2V5ID0gcm91dGUgPyByb3V0ZS5rZXkgOiAncm9vdCc7XG5cbiAgY29uc3QgZ2V0UmVoeWRyYXRlZFN0YXRlID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcblxuICAgIC8vIEF2b2lkIHJldHVybmluZyBuZXcgcm91dGUgb2JqZWN0cyBpZiB3ZSBkb24ndCBuZWVkIHRvXG4gICAgY29uc3Qgcm91dGVzID0gc3RhdGUucm91dGVzLm1hcCgocm91dGUpID0+IHtcbiAgICAgIGNvbnN0IGNoaWxkU3RhdGUgPSBnZXRTdGF0ZUxpc3RlbmVyc1tyb3V0ZS5rZXldPy4oKTtcblxuICAgICAgaWYgKHJvdXRlLnN0YXRlID09PSBjaGlsZFN0YXRlKSB7XG4gICAgICAgIHJldHVybiByb3V0ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHsgLi4ucm91dGUsIHN0YXRlOiBjaGlsZFN0YXRlIH07XG4gICAgfSk7XG5cbiAgICBpZiAoaXNBcnJheUVxdWFsKHN0YXRlLnJvdXRlcywgcm91dGVzKSkge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiB7IC4uLnN0YXRlLCByb3V0ZXMgfTtcbiAgfSwgW2dldFN0YXRlLCBnZXRTdGF0ZUxpc3RlbmVyc10pO1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuIGFkZEtleWVkTGlzdGVuZXI/LignZ2V0U3RhdGUnLCBrZXksIGdldFJlaHlkcmF0ZWRTdGF0ZSk7XG4gIH0sIFthZGRLZXllZExpc3RlbmVyLCBnZXRSZWh5ZHJhdGVkU3RhdGUsIGtleV0pO1xufVxuIl19