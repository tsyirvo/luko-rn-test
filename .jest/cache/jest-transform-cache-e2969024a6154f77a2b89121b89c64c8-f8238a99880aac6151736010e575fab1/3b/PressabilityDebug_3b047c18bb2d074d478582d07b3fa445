f4fc74a76e9d9638ccdbef2370810a4b
'use strict';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PressabilityDebugView = PressabilityDebugView;
exports.isEnabled = isEnabled;

var _normalizeColor = _interopRequireDefault(require("../StyleSheet/normalizeColor"));

var _Touchable = _interopRequireDefault(require("../Components/Touchable/Touchable"));

var _View = _interopRequireDefault(require("../Components/View/View"));

var React = _interopRequireWildcard(require("react"));

function PressabilityDebugView(_ref) {
  var color = _ref.color,
      hitSlop = _ref.hitSlop;

  if (__DEV__) {
    if (isEnabled()) {
      var _hitSlop$bottom, _hitSlop$left, _hitSlop$right, _hitSlop$top;

      var normalizedColor = (0, _normalizeColor.default)(color);

      if (typeof normalizedColor !== 'number') {
        return null;
      }

      var baseColor = '#' + (normalizedColor != null ? normalizedColor : 0).toString(16).padStart(8, '0');
      return React.createElement(_View.default, {
        pointerEvents: "none",
        style: {
          backgroundColor: baseColor.slice(0, -2) + '0F',
          borderColor: baseColor.slice(0, -2) + '55',
          borderStyle: 'dashed',
          borderWidth: 1,
          bottom: -((_hitSlop$bottom = hitSlop == null ? void 0 : hitSlop.bottom) != null ? _hitSlop$bottom : 0),
          left: -((_hitSlop$left = hitSlop == null ? void 0 : hitSlop.left) != null ? _hitSlop$left : 0),
          position: 'absolute',
          right: -((_hitSlop$right = hitSlop == null ? void 0 : hitSlop.right) != null ? _hitSlop$right : 0),
          top: -((_hitSlop$top = hitSlop == null ? void 0 : hitSlop.top) != null ? _hitSlop$top : 0)
        }
      });
    }
  }

  return null;
}

function isEnabled() {
  if (__DEV__) {
    return _Touchable.default.TOUCH_TARGET_DEBUG;
  }

  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByZXNzYWJpbGl0eURlYnVnLmpzIl0sIm5hbWVzIjpbIlByZXNzYWJpbGl0eURlYnVnVmlldyIsImNvbG9yIiwiaGl0U2xvcCIsIl9fREVWX18iLCJpc0VuYWJsZWQiLCJub3JtYWxpemVkQ29sb3IiLCJiYXNlQ29sb3IiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiYmFja2dyb3VuZENvbG9yIiwic2xpY2UiLCJib3JkZXJDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3R0b20iLCJsZWZ0IiwicG9zaXRpb24iLCJyaWdodCIsInRvcCIsIlRvdWNoYWJsZSIsIlRPVUNIX1RBUkdFVF9ERUJVRyJdLCJtYXBwaW5ncyI6IkFBVUE7Ozs7Ozs7Ozs7OztBQUVBOztBQUdBOztBQUNBOztBQUNBOztBQTJCTyxTQUFTQSxxQkFBVCxPQUFvRTtBQUFBLE1BQXBDQyxLQUFvQyxRQUFwQ0EsS0FBb0M7QUFBQSxNQUE3QkMsT0FBNkIsUUFBN0JBLE9BQTZCOztBQUN6RSxNQUFJQyxPQUFKLEVBQWE7QUFDWCxRQUFJQyxTQUFTLEVBQWIsRUFBaUI7QUFBQTs7QUFDZixVQUFNQyxlQUFlLEdBQUcsNkJBQWVKLEtBQWYsQ0FBeEI7O0FBQ0EsVUFBSSxPQUFPSSxlQUFQLEtBQTJCLFFBQS9CLEVBQXlDO0FBQ3ZDLGVBQU8sSUFBUDtBQUNEOztBQUNELFVBQU1DLFNBQVMsR0FDYixNQUFNLENBQUNELGVBQUQsV0FBQ0EsZUFBRCxHQUFvQixDQUFwQixFQUF1QkUsUUFBdkIsQ0FBZ0MsRUFBaEMsRUFBb0NDLFFBQXBDLENBQTZDLENBQTdDLEVBQWdELEdBQWhELENBRFI7QUFHQSxhQUNFLG9CQUFDLGFBQUQ7QUFDRSxRQUFBLGFBQWEsRUFBQyxNQURoQjtBQUVFLFFBQUEsS0FBSyxFQUFFO0FBQ0xDLFVBQUFBLGVBQWUsRUFBRUgsU0FBUyxDQUFDSSxLQUFWLENBQWdCLENBQWhCLEVBQW1CLENBQUMsQ0FBcEIsSUFBeUIsSUFEckM7QUFFTEMsVUFBQUEsV0FBVyxFQUFFTCxTQUFTLENBQUNJLEtBQVYsQ0FBZ0IsQ0FBaEIsRUFBbUIsQ0FBQyxDQUFwQixJQUF5QixJQUZqQztBQUdMRSxVQUFBQSxXQUFXLEVBQUUsUUFIUjtBQUlMQyxVQUFBQSxXQUFXLEVBQUUsQ0FKUjtBQUtMQyxVQUFBQSxNQUFNLEVBQUUscUJBQUVaLE9BQUYsb0JBQUVBLE9BQU8sQ0FBRVksTUFBWCw4QkFBcUIsQ0FBckIsQ0FMSDtBQU1MQyxVQUFBQSxJQUFJLEVBQUUsbUJBQUViLE9BQUYsb0JBQUVBLE9BQU8sQ0FBRWEsSUFBWCw0QkFBbUIsQ0FBbkIsQ0FORDtBQU9MQyxVQUFBQSxRQUFRLEVBQUUsVUFQTDtBQVFMQyxVQUFBQSxLQUFLLEVBQUUsb0JBQUVmLE9BQUYsb0JBQUVBLE9BQU8sQ0FBRWUsS0FBWCw2QkFBb0IsQ0FBcEIsQ0FSRjtBQVNMQyxVQUFBQSxHQUFHLEVBQUUsa0JBQUVoQixPQUFGLG9CQUFFQSxPQUFPLENBQUVnQixHQUFYLDJCQUFrQixDQUFsQjtBQVRBO0FBRlQsUUFERjtBQWdCRDtBQUNGOztBQUNELFNBQU8sSUFBUDtBQUNEOztBQUVNLFNBQVNkLFNBQVQsR0FBOEI7QUFDbkMsTUFBSUQsT0FBSixFQUFhO0FBQ1gsV0FBT2dCLG1CQUFVQyxrQkFBakI7QUFDRDs7QUFDRCxTQUFPLEtBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgbm9ybWFsaXplQ29sb3IgZnJvbSAnLi4vU3R5bGVTaGVldC9ub3JtYWxpemVDb2xvcic7XG5pbXBvcnQgdHlwZSB7Q29sb3JWYWx1ZX0gZnJvbSAnLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0VHlwZXMnO1xuXG5pbXBvcnQgVG91Y2hhYmxlIGZyb20gJy4uL0NvbXBvbmVudHMvVG91Y2hhYmxlL1RvdWNoYWJsZSc7XG5pbXBvcnQgVmlldyBmcm9tICcuLi9Db21wb25lbnRzL1ZpZXcvVmlldyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbnR5cGUgUHJvcHMgPSAkUmVhZE9ubHk8e3xcbiAgY29sb3I6IENvbG9yVmFsdWUsXG4gIGhpdFNsb3A6ID8kUmVhZE9ubHk8e3xcbiAgICBib3R0b20/OiA/bnVtYmVyLFxuICAgIGxlZnQ/OiA/bnVtYmVyLFxuICAgIHJpZ2h0PzogP251bWJlcixcbiAgICB0b3A/OiA/bnVtYmVyLFxuICB8fT4sXG58fT47XG5cbi8qKlxuICogRGlzcGxheXMgYSBkZWJ1ZyBvdmVybGF5IHRvIHZpc3VhbGl6ZSBwcmVzcyB0YXJnZXRzIHdoZW4gZW5hYmxlZCB2aWEgdGhlXG4gKiBSZWFjdCBOYXRpdmUgSW5zcGVjdG9yLiBDYWxscyB0byB0aGlzIG1vZHVsZSBzaG91bGQgYmUgZ3VhcmRlZCBieSBgX19ERVZfX2AsXG4gKiBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPFZpZXc+XG4gKiAgICAgICB7Y2hpbGRyZW59XG4gKiAgICAgICB7X19ERVZfXyA/IChcbiAqICAgICAgICAgPFByZXNzYWJpbGl0eURlYnVnVmlldyBjb2xvcj1cIi4uLlwiIGhpdFNsb3A9e3Byb3BzLmhpdFNsb3B9IC8+XG4gKiAgICAgICApIDogbnVsbH1cbiAqICAgICA8L1ZpZXc+XG4gKiAgICk7XG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gUHJlc3NhYmlsaXR5RGVidWdWaWV3KHtjb2xvciwgaGl0U2xvcH06IFByb3BzKTogUmVhY3QuTm9kZSB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaWYgKGlzRW5hYmxlZCgpKSB7XG4gICAgICBjb25zdCBub3JtYWxpemVkQ29sb3IgPSBub3JtYWxpemVDb2xvcihjb2xvcik7XG4gICAgICBpZiAodHlwZW9mIG5vcm1hbGl6ZWRDb2xvciAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICBjb25zdCBiYXNlQ29sb3IgPVxuICAgICAgICAnIycgKyAobm9ybWFsaXplZENvbG9yID8/IDApLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg4LCAnMCcpO1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Vmlld1xuICAgICAgICAgIHBvaW50ZXJFdmVudHM9XCJub25lXCJcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYXNlQ29sb3Iuc2xpY2UoMCwgLTIpICsgJzBGJywgLy8gMTUlXG4gICAgICAgICAgICBib3JkZXJDb2xvcjogYmFzZUNvbG9yLnNsaWNlKDAsIC0yKSArICc1NScsIC8vIDg1JVxuICAgICAgICAgICAgYm9yZGVyU3R5bGU6ICdkYXNoZWQnLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgICAgICAgICBib3R0b206IC0oaGl0U2xvcD8uYm90dG9tID8/IDApLFxuICAgICAgICAgICAgbGVmdDogLShoaXRTbG9wPy5sZWZ0ID8/IDApLFxuICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICByaWdodDogLShoaXRTbG9wPy5yaWdodCA/PyAwKSxcbiAgICAgICAgICAgIHRvcDogLShoaXRTbG9wPy50b3AgPz8gMCksXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNFbmFibGVkKCk6IGJvb2xlYW4ge1xuICBpZiAoX19ERVZfXykge1xuICAgIHJldHVybiBUb3VjaGFibGUuVE9VQ0hfVEFSR0VUX0RFQlVHO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==